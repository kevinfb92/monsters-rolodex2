{"version":3,"sources":["Components/card/card.component.jsx","Components/card-list/card-list.component.jsx","Components/search-box/search-box.component.jsx","App.js","logo.svg","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAIaA,EAAO,SAAAC,GAEhB,OAAO,sBAAKC,UAAU,iBAAf,UACH,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCLbC,G,MAAW,SAAUR,GAC9B,OAAO,qBAAKC,UAAY,YAAjB,SACHD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAG,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCH3CM,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACpC,OAAO,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCgDxEG,GCpDA,I,wDDOb,aAAc,IAAD,8BACX,gBACKC,MAAQ,CACXR,SAAW,GAYXS,YAAa,IAfJ,E,qDAmBb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACf,SAAUc,S,oBAG1C,WAAS,IAAD,OAEN,EAAiCE,KAAKR,MAA9BR,EAAR,EAAQA,SAAUS,EAAlB,EAAkBA,YAEZQ,EAAmBjB,EAASkB,QAAO,SAAAvB,GAAO,OAAGA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,kBAEnG,OACA,sBAAK3B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAc,SAAAiB,GAAC,OAAG,EAAKN,SAAS,CAACN,YAAaY,EAAEC,OAAOC,WAEzD,cAAC,EAAD,CAAUvB,SAAWiB,W,GAvCTO,cEMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4910535d.chunk.js","sourcesContent":["import {Component} from \"react\";\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => {\r\n\r\n    return(<div className='card-container'>\r\n        <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>)\r\n}","import React from \"react\";\r\nimport { Card } from \"../card/card.component\";\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = function (props) {\r\n    return <div className = 'card-list'>{\r\n        props.monsters.map(monster=>(<Card key={monster.id} monster={monster}/>))\r\n    }</div>\r\n}","import React from \"react\";\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => {\r\n    return <input className='search' type='search' placeholder={placeholder} onChange={handleChange}/>\r\n}","import { Component } from 'react';\nimport { CardList } from './Components/card-list/card-list.component';\nimport { SearchBox } from './Components/search-box/search-box.component';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      monsters : [\n/*        { name: 'Frankenstein',\n          id: '1dvsn'\n        },\n        { name: 'Dracula',\n          id: '4sdbn'\n        },\n        { name: 'Zombie',\n          id: '6bdbq'\n        }        */\n      ],\n\n      searchField: ''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}));\n  }\n\n  render(){\n\n    const { monsters, searchField} = this.state;\n\n    const filteredMonsters = monsters.filter(monster=>(monster.name.toLowerCase().includes(searchField.toLowerCase())));\n\n    return(\n    <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <SearchBox \n        placeholder='search monsters' \n        handleChange={e=>(this.setState({searchField: e.target.value}))} \n      />\n      <CardList monsters= {filteredMonsters}/>\n    </div>\n    );\n  }\n\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}